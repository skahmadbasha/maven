1)what is maven ?
Maven is an Apache Software Foundation build tool for project management
that automates Java projects Maven makes the software building process easier, 
provides a uniform system for building, quality project.


2)how to use ?
Maven Phases
Although hardly a comprehensive list, these are the most common default lifecycle phases executed.
->validate: validate the project is correct and all necessary information is available
->compile: compile the source code of the project
->test: test the compiled source code using a suitable unit testing framework. These tests should not require the code be packaged or deployed
->package: take the compiled code and package it in its distributable format, such as a JAR.
->integration-test: process and deploy the package if necessary into an environment where integration tests can be run
->verify: run any checks to verify the package is valid and meets quality criteria
->install: install the package into the local repository, for use as a dependency in other projects locally
->deploy: done in an integration or release environment, copies the final package to the remote repository for sharing with other developers and projects.
There are two other Maven lifecycles of note beyond the default list above. They are
->clean: cleans up artifacts created by prior builds
->site: generates site documentation for this project
->alternate for maven : ANT


3)what is maven repo
A repository is a directory where all the project jars, 
library jar, plugins or any other project specific artifacts
are stored and can be used by Maven easily.

4)diff b/m maven and Mavn repo
->Maven is an Apache Software Foundation build tool for project management
that automates Java projects Maven makes the software building process easier, 
provides a uniform system for building, quality project.


->In Maven terminology, a repository is a directory where all the
project jars, library jar, plugins or any other project specific 
artifacts are stored and can be used by Maven easily.

5)cmds of maven
Maven Commands:
->mvn clean: Cleans the project and removes all files generated by the previous build.
->mvn compile: Compiles source code of the project.
->mvn test-compile: Compiles the test source code.
->mvn test: Runs tests for the project.
->mvn package: Creates JAR or WAR file for the project to convert it into a distributable format.
->mvn install: Deploys the packaged JAR/ WAR file to the local repository.
->mvn deploy: Copies the packaged JAR/ WAR file to the remote repository after compiling, 
running tests and building the project.

6)how to create an maven
->Create a Project from Maven Template. In a terminal (*uix or Mac) or command prompt (Windows),
navigate to the folder you want to create the Java project. ...
->Maven Directory Layout. The following project directory structure will be created. ...
->POM file. Review the generated pom. ...
->Update POM. ...
->Write Code. ...
->Maven Build. ...
->Run#1. ...
->Run#2.
->Run#2.POM

7)what POM
A Project Object Model or POM is the fundamental unit of work in Maven.
It is an XML file that contains information about the project and
configuration details used by Maven to build the project. 
It contains default values for most projects.

8)what conatains POM
It is an XML file that contains information about the project 
and configuration details used by Maven to build the project. 
It contains default values for most projects.


9)What ArtificeID
artifactId – a unique name of the project.

10)Group ID
Maven uses a set of identifiers, also called coordinates,
to uniquely identify a project and specify how the project
artifact should be packaged: groupId – a unique base name of 
the company or group that created the project.

11)what is advantage of Maven
Advantages of using Maven:
1)Maven can add all the dependencies required for the project automatically by reading pom file.
2)One can easily build their project to jar,war etc. as per their requirements using Maven.
3)Maven makes easy to start project in different environments and one doesn’t needs to handle the dependencies injection, builds, processing, etc.
4)Adding a new dependency is very easy. One has to just write the dependency code in pom file.